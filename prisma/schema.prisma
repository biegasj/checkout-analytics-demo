// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id        Int       @id @default(autoincrement())
  name      String
  price     Decimal
  imageUrl  String
  imageAlt  String
  quantity  Int

  cartItems  CartItem[]
  orderItems OrderItem[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Cart {
  id         Int       @id @default(autoincrement())
  sessionId  String    @unique

  items      CartItem[]
  order      Order?

  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cart      Cart     @relation(fields: [cartId], references: [id])
  cartId    Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int      @default(1)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([cartId, productId])
}

model Order {
  id             Int         @id @default(autoincrement())
  cart           Cart?       @relation(fields: [cartId], references: [id])
  cartId         Int?        @unique

  firstName      String
  lastName       String
  address        String

  shippingMethod String
  paymentMethod  String
  orderItems     OrderItem[]

  totalPrice     Decimal
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int

  priceAtPurchase     Decimal
  quantity  Int      @default(1)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
